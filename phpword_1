<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="Keywords" content="blog"/>
    <meta name="Description" content="blog"/>
    <title>Simple</title>
    <link rel="shortcut icon" href="/static/favicon.png"/>
    <link rel="stylesheet" type="text/css" href="/main.css" />
</head>
<body>
<div class="main">
    <div class="header">
    	<ul id="pages">
            <li><a href="/">home</a></li>
            <li><a href="/#/tags">tags</a></li>
            <li><a href="/#/archive">archive</a></li>
    	</ul>
    </div>
	<div class="wrap-header">
	<h1>
    <a href="/" id="title"></a>
	</h1>
	</div>
<div id="md" style="display: none;">
<!-- markdown -->
#PHPWord使用入门
　最近项目中使用到导出网页内容到word功能，使用php内置函数也能实现导出，但是样式比较单一，于是找到一个开源的工具 PHPWord，研究了一番，比较强大，这里介绍下使用；
###　[PHPWord](https://github.com/PHPOffice/PHPWord) 要求PHP版本5.3+，因为5.3之后引入了命名空间的概念；

## Requirements
* PHP 5.3+
* PHP Zip extension
* PHP XML Parser extension
## Optional PHP extensions
+ PHP GD extension
+ PHP XMLWriter extension
+ PHP XSL extension
## Installation
　特别注意官方给出下面的初始化方法：  
 　Alternatively, you can download the latest release from the releases page. In this case, you will have to register the autoloader.
~~~~{php}
require_once 'path/to/PhpWord/src/PhpWord/Autoloader.php';
\PhpOffice\PhpWord\Autoloader::register();
~~~~
## Basic usage
~~~~{python}
$phpWord = new \PhpOffice\PhpWord\PhpWord();

// Every element you want to append to the word document is placed in a section.
// To create a basic section:
$section = $phpWord->addSection();

// After creating a section, you can append elements:
$section->addText('Hello world!');

// You can directly style your text by giving the addText function an array:
$section->addText('Hello world! I am formatted.',
    array('name'=>'Tahoma', 'size'=>16, 'bold'=>true));

// If you often need the same style again you can create a user defined style
// to the word document and give the addText function the name of the style:
$phpWord->addFontStyle('myOwnStyle',
    array('name'=>'Verdana', 'size'=>14, 'color'=>'1B2232'));
$section->addText('Hello world! I am formatted by a user defined style',
    'myOwnStyle');

// You can also put the appended element to local object like this:
$fontStyle = new \PhpOffice\PhpWord\Style\Font();
$fontStyle->setBold(true);
$fontStyle->setName('Verdana');
$fontStyle->setSize(22);
$myTextElement = $section->addText('Hello World!');
$myTextElement->setFontStyle($fontStyle);

// Finally, write the document:
$objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, 'Word2007');
$objWriter->save('helloWorld.docx');
~~~~
上面的示例代码可以输出简单的Word文档，涉及到命名空间的语法，导入，限定名称，完全限定名称等概念可以自行查找资料学习，未完待续！



<!-- markdown end -->
</div>
<div class="entry" id="main">
<!-- content -->
<h1 id="phpword">PHPWord使用入门</h1>

<p>　最近项目中使用到导出网页内容到word功能，使用php内置函数也能实现导出，但是样式比较单一，于是找到一个开源的工具 PHPWord，研究了一番，比较强大，这里介绍下使用；</p>

<h3 id="phpwordhttpsgithubcomphpofficephpwordphp5353">　<a href="https://github.com/PHPOffice/PHPWord">PHPWord</a> 要求PHP版本5.3+，因为5.3之后引入了命名空间的概念；</h3>

<h2 id="requirements">Requirements</h2>

<ul>
<li>PHP 5.3+</li>
<li>PHP Zip extension</li>
<li>PHP XML Parser extension</li>
</ul>

<h2 id="optionalphpextensions">Optional PHP extensions</h2>

<ul>
<li>PHP GD extension</li>
<li>PHP XMLWriter extension</li>
<li>PHP XSL extension</li>
</ul>

<h2 id="installation">Installation</h2>

<p>　特别注意官方给出下面的初始化方法： <br>
 　Alternatively, you can download the latest release from the releases page. In this case, you will have to register the autoloader.
</p><pre class=" language-php"><code class=" language-php"><span class="token keyword">require_once</span> <span class="token string">'path/to/PhpWord/src/PhpWord/Autoloader.php'</span><span class="token punctuation">;</span>
\<span class="token package">PhpOffice<span class="token punctuation">\</span>PhpWord<span class="token punctuation">\</span>Autoloader</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">register<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>## Basic usage
<pre class=" language-python"><code class=" language-python">$phpWord <span class="token operator">=</span> new \PhpOffice\PhpWord\PhpWord<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> Every element you want to append to the word document <span class="token keyword">is</span> placed <span class="token keyword">in</span> <span class="token number">a</span> section<span class="token punctuation">.</span>
<span class="token operator">/</span><span class="token operator">/</span> To create <span class="token number">a</span> basic section<span class="token punctuation">:</span>
$section <span class="token operator">=</span> $phpWord<span class="token operator">-</span>&gt;addSection<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> After creating <span class="token number">a</span> section<span class="token punctuation">,</span> you can append elements<span class="token punctuation">:</span>
$section<span class="token operator">-</span>&gt;addText<span class="token punctuation">(</span><span class="token string">'Hello world!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> You can directly style your text by giving the addText function an array<span class="token punctuation">:</span>
$section<span class="token operator">-</span>&gt;addText<span class="token punctuation">(</span><span class="token string">'Hello world! I am formatted.'</span><span class="token punctuation">,</span>
    array<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token operator">=</span>&gt;<span class="token string">'Tahoma'</span><span class="token punctuation">,</span> <span class="token string">'size'</span><span class="token operator">=</span>&gt;<span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">'bold'</span><span class="token operator">=</span>&gt;true<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> If you often need the same style again you can create <span class="token number">a</span> user defined style
<span class="token operator">/</span><span class="token operator">/</span> to the word document <span class="token operator">and</span> give the addText function the name of the style<span class="token punctuation">:</span>
$phpWord<span class="token operator">-</span>&gt;addFontStyle<span class="token punctuation">(</span><span class="token string">'myOwnStyle'</span><span class="token punctuation">,</span>
    array<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token operator">=</span>&gt;<span class="token string">'Verdana'</span><span class="token punctuation">,</span> <span class="token string">'size'</span><span class="token operator">=</span>&gt;<span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token operator">=</span>&gt;<span class="token string">'1B2232'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$section<span class="token operator">-</span>&gt;addText<span class="token punctuation">(</span><span class="token string">'Hello world! I am formatted by a user defined style'</span><span class="token punctuation">,</span>
    <span class="token string">'myOwnStyle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">/</span><span class="token operator">/</span> You can also put the appended element to local object like this<span class="token punctuation">:</span>
$fontStyle <span class="token operator">=</span> new \PhpOffice\PhpWord\Style\Font<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$fontStyle<span class="token operator">-</span>&gt;setBold<span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
$fontStyle<span class="token operator">-</span>&gt;setName<span class="token punctuation">(</span><span class="token string">'Verdana'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$fontStyle<span class="token operator">-</span>&gt;setSize<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$myTextElement <span class="token operator">=</span> $section<span class="token operator">-</span>&gt;addText<span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$myTextElement<span class="token operator">-</span>&gt;setFontStyle<span class="token punctuation">(</span>$fontStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code><p><code class=" language-python"><span class="token operator">/</span><span class="token operator">/</span> Finally<span class="token punctuation">,</span> write the document<span class="token punctuation">:</span>
$objWriter <span class="token operator">=</span> \PhpOffice\PhpWord\IOFactory<span class="token punctuation">:</span><span class="token punctuation">:</span>createWriter<span class="token punctuation">(</span>$phpWord<span class="token punctuation">,</span> <span class="token string">'Word2007'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$objWriter<span class="token operator">-</span>&gt;save<span class="token punctuation">(</span><span class="token string">'helloWorld.docx'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></p></pre>上面的示例代码可以输出简单的Word文档，涉及到命名空间的语法，导入，限定名称，完全限定名称等概念可以自行查找资料学习，未完待续！<p></p>
<!-- content end -->
</div>
<br>
<br>
    <div id="disqus_thread"></div>
	<div class="footer">
		<p>© Copyright 2014 by isnowfy, Designed by isnowfy</p>
	</div>
</div>
<script src="main.js"></script>
<script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ["\\(", "\\)"]], processEscapes: true}});
</script>
<script id="content" type="text/mustache">
    <h1>{{title}}</h1>
    <div class="tag">
    {{date}}
    {{#tags}}
    <a href="/#/tag/{{name}}">#{{name}}</a>
    {{/tags}}
    </div>
</script>
<script id="pagesTemplate" type="text/mustache">
    {{#pages}}
    <li>
        <a href="{{path}}">{{title}}</a>
    </li>
    {{/pages}}
</script>
<script>
$(document).ready(function() {
    $.ajax({
        url: "main.json",
        type: "GET",
        dataType: "json",
        success: function(data) {
            $("#title").html(data.name);
            var pagesTemplate = Hogan.compile($("#pagesTemplate").html());
            var pagesHtml = pagesTemplate.render({"pages": data.pages});
            $("#pages").append(pagesHtml);
            //path
            var path = "phpword_1";
            //path end
            var now = 0;
            for (var i = 0; i < data.posts.length; ++i)
                if (path == data.posts[i].path)
                    now = i;
            var post = data.posts[now];
            var tmp = post.tags.split(" ");
            var tags = [];
            for (var i = 0; i < tmp.length; ++i)
                if (tmp[i].length > 0)
                    tags.push({"name": tmp[i]});
            var contentTemplate = Hogan.compile($("#content").html());
            var contentHtml = contentTemplate.render({"title": post.title, "tags": tags, "date": post.date});
            $("#main").prepend(contentHtml);
            if (data.disqus_shortname.length > 0) {
                var disqus_shortname = data.disqus_shortname;
                (function() {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            }
        }
    });
});
</script>
</body>
</html>
